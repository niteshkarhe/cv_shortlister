# coding: utf-8


from openapi_server.app_context import db
from openapi_server.utils.query import filter


{{#models}}
{{#model}}
class {{classname}}(db.Model):
    __tablename__ = '{{classname}}'

    """NOTE: This class is auto generated by the swagger code generator program using the template in codegen folder.

    Do not edit the class manually.
    """{{#allowableValues}}

    """
    allowed enum values
    """
{{#enumVars}}
    {{name}} = {{{value}}}{{^-last}}
{{/-last}}
{{/enumVars}}{{/allowableValues}}

    swagger_types = {
{{#vars}}
        '{{name}}': '{{{datatype}}}'{{#hasMore}},{{/hasMore}}
{{/vars}}
    }

    attribute_map = {
{{#vars}}
        '{{name}}': '{{baseName}}'{{#hasMore}},{{/hasMore}}
{{/vars}}
    }
    def __init__(self{{#vars}}, {{name}}={{#defaultValue}}{{{defaultValue}}}{{/defaultValue}}{{^defaultValue}}None{{/defaultValue}}{{/vars}}):  # noqa: E501
        """{{classname}} - a model defined in Swagger"""  # noqa: E501
        {{#vars}}
        self.{{name}} = {{name}}
        {{/vars}}

    def add(self):
        db.session.add(self)
        db.session.commit()

    def delete(self):
        db.session.delete(self)
        db.session.commit()

    def update(self):
        db.session.commit()

    @staticmethod
    def get_all(self):
        networks = {{classname}}.query.all()
        return networks

    @staticmethod
    def get_by_filters(self,filters):
        query = filter({{classname}}, filters)
        {{classname}}s = query.all()
        return {{classname}}s

    {{#vars}}
    @staticmethod
    def get_by_{{name}}(self,{{name}}):
        {{classname}}s = {{classname}}.query.filter_by({{name}} = {{name}}).all()
        return {{classname}}s

    {{/vars}}