from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class EmailRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, role=None, email=None, login_code=None):  # noqa: E501
        """EmailRequest - a model defined in OpenAPI

        :param name: The name of this EmailRequest.  # noqa: E501
        :type name: str
        :param role: The role of this EmailRequest.  # noqa: E501
        :type role: str
        :param email: The email of this EmailRequest.  # noqa: E501
        :type email: str
        :param login_code: The login_code of this EmailRequest.  # noqa: E501
        :type login_code: int
        """
        self.openapi_types = {
            'name': str,
            'role': str,
            'email': str,
            'login_code': int
        }

        self.attribute_map = {
            'name': 'name',
            'role': 'role',
            'email': 'email',
            'login_code': 'login_code'
        }

        self._name = name
        self._role = role
        self._email = email
        self._login_code = login_code

    @classmethod
    def from_dict(cls, dikt) -> 'EmailRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EmailRequest of this EmailRequest.  # noqa: E501
        :rtype: EmailRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this EmailRequest.


        :return: The name of this EmailRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this EmailRequest.


        :param name: The name of this EmailRequest.
        :type name: str
        """

        self._name = name

    @property
    def role(self) -> str:
        """Gets the role of this EmailRequest.


        :return: The role of this EmailRequest.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role: str):
        """Sets the role of this EmailRequest.


        :param role: The role of this EmailRequest.
        :type role: str
        """

        self._role = role

    @property
    def email(self) -> str:
        """Gets the email of this EmailRequest.


        :return: The email of this EmailRequest.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this EmailRequest.


        :param email: The email of this EmailRequest.
        :type email: str
        """

        self._email = email

    @property
    def login_code(self) -> int:
        """Gets the login_code of this EmailRequest.


        :return: The login_code of this EmailRequest.
        :rtype: int
        """
        return self._login_code

    @login_code.setter
    def login_code(self, login_code: int):
        """Sets the login_code of this EmailRequest.


        :param login_code: The login_code of this EmailRequest.
        :type login_code: int
        """

        self._login_code = login_code
