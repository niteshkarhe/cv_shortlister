from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class GetCandidateObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, email=None, role=None, questions=None):  # noqa: E501
        """GetCandidateObject - a model defined in OpenAPI

        :param name: The name of this GetCandidateObject.  # noqa: E501
        :type name: str
        :param email: The email of this GetCandidateObject.  # noqa: E501
        :type email: str
        :param role: The role of this GetCandidateObject.  # noqa: E501
        :type role: str
        :param questions: The questions of this GetCandidateObject.  # noqa: E501
        :type questions: List[str]
        """
        self.openapi_types = {
            'name': str,
            'email': str,
            'role': str,
            'questions': List[str]
        }

        self.attribute_map = {
            'name': 'name',
            'email': 'email',
            'role': 'role',
            'questions': 'questions'
        }

        self._name = name
        self._email = email
        self._role = role
        self._questions = questions

    @classmethod
    def from_dict(cls, dikt) -> 'GetCandidateObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The GetCandidateObject of this GetCandidateObject.  # noqa: E501
        :rtype: GetCandidateObject
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this GetCandidateObject.


        :return: The name of this GetCandidateObject.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this GetCandidateObject.


        :param name: The name of this GetCandidateObject.
        :type name: str
        """

        self._name = name

    @property
    def email(self) -> str:
        """Gets the email of this GetCandidateObject.


        :return: The email of this GetCandidateObject.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this GetCandidateObject.


        :param email: The email of this GetCandidateObject.
        :type email: str
        """

        self._email = email

    @property
    def role(self) -> str:
        """Gets the role of this GetCandidateObject.


        :return: The role of this GetCandidateObject.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role: str):
        """Sets the role of this GetCandidateObject.


        :param role: The role of this GetCandidateObject.
        :type role: str
        """

        self._role = role

    @property
    def questions(self) -> List[str]:
        """Gets the questions of this GetCandidateObject.


        :return: The questions of this GetCandidateObject.
        :rtype: List[str]
        """
        return self._questions

    @questions.setter
    def questions(self, questions: List[str]):
        """Sets the questions of this GetCandidateObject.


        :param questions: The questions of this GetCandidateObject.
        :type questions: List[str]
        """

        self._questions = questions
