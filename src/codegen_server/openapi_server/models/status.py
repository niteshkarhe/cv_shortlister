from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.attribute import Attribute
from openapi_server import util

from openapi_server.models.attribute import Attribute  # noqa: E501

class Status(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message=None, version=None, attributes=None):  # noqa: E501
        """Status - a model defined in OpenAPI

        :param message: The message of this Status.  # noqa: E501
        :type message: str
        :param version: The version of this Status.  # noqa: E501
        :type version: str
        :param attributes: The attributes of this Status.  # noqa: E501
        :type attributes: List[Attribute]
        """
        self.openapi_types = {
            'message': str,
            'version': str,
            'attributes': List[Attribute]
        }

        self.attribute_map = {
            'message': 'message',
            'version': 'version',
            'attributes': 'attributes'
        }

        self._message = message
        self._version = version
        self._attributes = attributes

    @classmethod
    def from_dict(cls, dikt) -> 'Status':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The status of this Status.  # noqa: E501
        :rtype: Status
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self) -> str:
        """Gets the message of this Status.


        :return: The message of this Status.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this Status.


        :param message: The message of this Status.
        :type message: str
        """

        self._message = message

    @property
    def version(self) -> str:
        """Gets the version of this Status.


        :return: The version of this Status.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this Status.


        :param version: The version of this Status.
        :type version: str
        """

        self._version = version

    @property
    def attributes(self) -> List[Attribute]:
        """Gets the attributes of this Status.


        :return: The attributes of this Status.
        :rtype: List[Attribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes: List[Attribute]):
        """Sets the attributes of this Status.


        :param attributes: The attributes of this Status.
        :type attributes: List[Attribute]
        """

        self._attributes = attributes
